package ui.main;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import dao.PromotionType_DAO;
import dao.Promotion_DAO;
import entity.Promotion;
import entity.PromotionType;
import entity.StaticProcess;
import ui.button.Button;
import ui.combo_suggestion.ComboBoxSuggestion;
import ui.combobox.Combobox;
import ui.datechooser.DateChooser;
import ui.dialog.Message;
import ui.panel.PanelRound;
import ui.scroll.win11.PolygonCorner;
import ui.table.TableCustom;
import ui.textfield.TextField;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

public class AddPromotion extends JPanel {

    public AddPromotion() {
        initComponents();

        TableCustom.apply(scrollPane, TableCustom.TableType.MULTI_LINE);
        loadCbb();
        loadCbbType_Right();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        polygonCorner = new PolygonCorner();
        tableCustom = new TableCustom();
        startDate = new DateChooser();
        endDate = new DateChooser();
        pCenter = new PanelRound();
        pLeft = new PanelRound();
        lbTitle = new JLabel();
        lbPromoName = new JLabel();
        txtNgayBatDau = new TextField();
        lbStartDate = new JLabel();
        txtNgayKetThuc = new TextField();
        lbEndDate = new JLabel();
        lbPromoType = new JLabel();
        btnAdd = new Button();
        btnEndDate = new Button();
        btnStartDate = new Button();
        txtName = new TextField();
        lblPer = new JLabel();
        txtPer = new TextField();
        cboProType_Left = new ComboBoxSuggestion();
        scrollPane = new JScrollPane();
        tableKhuyenMai = new JTable();
        cboLoaiKhuyenMai = new Combobox();
        cboTinhTrang = new Combobox();

        startDate.setForeground(new Color(102, 204, 255));
        startDate.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        startDate.setTextRefernce(txtNgayBatDau);

        endDate.setForeground(new Color(102, 204, 255));
        endDate.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        endDate.setTextRefernce(txtNgayKetThuc);

        setBackground(new Color(242, 249, 255));
        setPreferredSize(new Dimension(1620, 1000));
        setLayout(new BorderLayout());

        pCenter.setBackground(new Color(242, 249, 255));
        pCenter.setPreferredSize(new Dimension(1600, 1000));

        pLeft.setBackground(new Color(255, 255, 255));
        pLeft.setRoundBottomLeft(20);
        pLeft.setRoundBottomRight(20);
        pLeft.setRoundTopLeft(20);
        pLeft.setRoundTopRight(20);

        lbTitle.setFont(new Font("Segoe UI", 0, 30)); // NOI18N
        lbTitle.setText("Thông tin khuyến mãi:");

        lbPromoName.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lbPromoName.setText("Tên khuyến mãi: ");

        txtNgayBatDau.setEditable(false);
        txtNgayBatDau.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        lbStartDate.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lbStartDate.setText("Ngày bắt đầu:");

        txtNgayKetThuc.setEditable(false);
        txtNgayKetThuc.setFont(new Font("Segoe UI", 0, 18)); // NOI18N

        lbEndDate.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lbEndDate.setText("Ngày kết thúc:");

        lbPromoType.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lbPromoType.setText("Loại khuyến mãi:");

        btnAdd.setBackground(new Color(102, 204, 255));
        btnAdd.setForeground(new Color(255, 255, 255));
        btnAdd.setText("Thêm khuyến mãi");
        btnAdd.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        btnAdd.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEndDate.setIcon(new ImageIcon("src/main/java/ui/button/calendar.png")); // NOI18N
        btnEndDate.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnEndDateActionPerformed(evt);
            }
        });

        btnStartDate.setIcon(new ImageIcon("src/main/java/ui/button/calendar.png")); // NOI18N
        btnStartDate.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnStartDateActionPerformed(evt);
            }
        });

        txtName.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        txtName.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblPer.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        lblPer.setText("Phần trăm:");

        txtPer.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        txtPer.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                txtPerActionPerformed(evt);
            }
        });

        cboProType_Left.setSelectedIndex(-1);
        cboProType_Left.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        cboProType_Left.setModel(new DefaultComboBoxModel(new String[]{""}));

        javax.swing.GroupLayout pLeftLayout = new javax.swing.GroupLayout(pLeft);
        pLeft.setLayout(pLeftLayout);
        pLeftLayout.setHorizontalGroup(
                pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pLeftLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lbTitle)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pLeftLayout.createSequentialGroup()
                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(pLeftLayout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pLeftLayout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(pLeftLayout.createSequentialGroup()
                                                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                        .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addComponent(lbPromoName)
                                                                                .addComponent(lbStartDate))
                                                                        .addGroup(pLeftLayout.createSequentialGroup()
                                                                                .addComponent(lbEndDate)
                                                                                .addGap(21, 21, 21)))
                                                                .addGap(16, 16, 16)
                                                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addGroup(pLeftLayout.createSequentialGroup()
                                                                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                                                                .addComponent(btnStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pLeftLayout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(btnEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(pLeftLayout.createSequentialGroup()
                                                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(lbPromoType)
                                                                        .addComponent(lblPer))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(cboProType_Left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(txtPer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                                .addGap(21, 21, 21))
        );
        pLeftLayout.setVerticalGroup(
                pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pLeftLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(lbTitle)
                                .addGap(73, 73, 73)
                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbPromoName, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pLeftLayout.createSequentialGroup()
                                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(lbStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(54, 54, 54)
                                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(lbEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(txtNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(pLeftLayout.createSequentialGroup()
                                                .addComponent(btnStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(61, 61, 61)
                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblPer, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPer, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbPromoType, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cboProType_Left, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(192, Short.MAX_VALUE))
        );

        tableKhuyenMai.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tableKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Mã khuyến mãi", "Tên khuyến mãi", "Ngày bắt đầu", "Ngày kết thúc", "Phần trăm", "Loại khuyến mãi"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        scrollPane.setViewportView(tableKhuyenMai);

        cboLoaiKhuyenMai.setBackground(new Color(242, 249, 255));
        cboLoaiKhuyenMai.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        cboLoaiKhuyenMai.setLabeText("Loại khuyến mãi");
        cboLoaiKhuyenMai.setModel(new DefaultComboBoxModel(new String[]{""}));
        cboLoaiKhuyenMai.setSelectedIndex(-1);
        cboLoaiKhuyenMai.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                cboLoaiKhuyenMaiActionPerformed(evt);
            }
        });

        cboTinhTrang.setBackground(new Color(242, 249, 255));
        cboTinhTrang.setModel(new DefaultComboBoxModel(new String[]{"", "Đang áp dụng", "Ngừng áp dụng"}));
        cboTinhTrang.setSelectedIndex(-1);
        cboTinhTrang.setToolTipText("");
        cboTinhTrang.setFont(new Font("Segoe UI", 0, 18)); // NOI18N
        cboTinhTrang.setLabeText("Tình trạng");
        cboTinhTrang.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                promotion_dao.updatePromotionStatus();
                Object selectedType = cboLoaiKhuyenMai.getSelectedItem();
                Object selectedStatus = cboTinhTrang.getSelectedItem();

                searchPromotion(selectedType, selectedStatus);
            }
        });

        javax.swing.GroupLayout pCenterLayout = new javax.swing.GroupLayout(pCenter);
        pCenter.setLayout(pCenterLayout);
        pCenterLayout.setHorizontalGroup(
                pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pCenterLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(pLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                                        .addGroup(pCenterLayout.createSequentialGroup()
                                                .addComponent(cboLoaiKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(cboTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        pCenterLayout.setVerticalGroup(
                pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pCenterLayout.createSequentialGroup()
                                .addGroup(pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pCenterLayout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addGroup(pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(cboLoaiKhuyenMai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(cboTinhTrang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pCenterLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(pLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(15, Short.MAX_VALUE))
        );

        add(pCenter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>

    private void btnAddActionPerformed(ActionEvent evt) {
        try {
            String name = txtName.getText().trim();
            String startDate = txtNgayBatDau.getText();
            String endDate = txtNgayKetThuc.getText();
            double per = Double.parseDouble(txtPer.getText());

            ArrayList<PromotionType> promotionTypeList = promotionType_dao.getPromotionTypeByCriterous(cboProType_Left.getSelectedItem().toString());

            PromotionType promotionType = promotionTypeList.getFirst();

            Promotion promotion = new Promotion(
                    promotion_dao.createPromotionID(convertDateFormat_createID(startDate), convertDateFormat_createID(endDate)),
                    name,
                    convertDateFormat(startDate),
                    convertDateFormat(endDate),
                    per,
                    true,
                    promotionType
            );
            if (promotion_dao.addPromotion(promotion)) {
                new Message(StaticProcess.homePage, true, "Thông báo", "Thêm khuyến mãi thành công", "src/main/java/ui/dialog/checked.png").showAlert();

            } else {
                new Message(StaticProcess.homePage, true, "Thông báo", "Thêm khuyến mãi thất bại", "src/main/java/ui/dialog/warning.png").showAlert();

            }
        } catch (NumberFormatException e) {
            new Message(StaticProcess.homePage, true, "Thông báo", "Vui lòng nhập phần trăm giảm giá hợp lệ.", "src/main/java/ui/dialog/warning.png").showAlert();
        }
    }


    private void btnStartDateActionPerformed(ActionEvent evt) {
        startDate.showPopup();
    }

    private void cboLoaiKhuyenMaiActionPerformed(ActionEvent evt) {
        Object selectedType = cboLoaiKhuyenMai.getSelectedItem();
        Object selectedStatus = cboTinhTrang.getSelectedItem();

        searchPromotion(selectedType, selectedStatus);
    }

    private void btnEndDateActionPerformed(ActionEvent evt) {
        endDate.showPopup();
    }

    private void txtNameActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void txtPerActionPerformed(ActionEvent evt) {
        // TODO add your handling code here:
    }

    public String convertDateFormat_createID(String inputDate) {
        DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        DateTimeFormatter outputFormatter = DateTimeFormatter.ofPattern("ddMMyy");

        LocalDate date = LocalDate.parse(inputDate, inputFormatter);

        return date.format(outputFormatter);
    }

    public LocalDate convertDateFormat(String inputDate) {
        DateTimeFormatter inputFormatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");

        LocalDate date = LocalDate.parse(inputDate, inputFormatter);
        return date;
    }

    private void loadCbb() {
        ArrayList<PromotionType> listPromotionType = promotionType_dao.getPromotionTypeList();
        for (PromotionType promotionType : listPromotionType) {
            cboLoaiKhuyenMai.addItem(promotionType.getPromotionTypeName());
        }
    }

    private void loadCbbType_Right() {
        ArrayList<PromotionType> listPromotionType = promotionType_dao.getPromotionTypeList();
        for (PromotionType promotionType : listPromotionType) {
            cboProType_Left.addItem(promotionType.getPromotionTypeName());
        }
    }

    private void searchPromotion(Object cri_type, Object crt_sta) {

        ArrayList<Promotion> promotionList = new ArrayList<>();

        if (cri_type == null && crt_sta != null) {
            if (crt_sta.equals("Đang áp dụng")) {
                promotionList = promotion_dao.getPromotionListByStatus(true);

            } else if (crt_sta.equals("Ngừng áp dụng")) {
                promotionList = promotion_dao.getPromotionListByStatus(false);

            } else if (crt_sta.equals("")) {
                promotionList = promotion_dao.getPromotionListByCriterous("");

            }


        } else if (cri_type != null && crt_sta == null) {
            promotionList = promotion_dao.getPromotionListByCriterous(cri_type.toString());

        } else if (cri_type != null && crt_sta != null) {
            ArrayList<Promotion> proList_1 = promotion_dao.getPromotionListByCriterous(cri_type.toString());
            if (crt_sta.equals("Đang áp dụng")) {
                promotionList = promotion_dao.getPromotionListByCriterous(true, proList_1);


            } else if (crt_sta.equals("Ngừng áp dụng")) {
                promotionList = promotion_dao.getPromotionListByCriterous(false, proList_1);

            } else if (crt_sta.equals("")) {
                promotionList = promotion_dao.getPromotionListByCriterous(cri_type.toString());

            }

        }
        loadTable(promotionList);


    }


    private void loadTable(ArrayList<Promotion> promotionList) {
        DefaultTableModel model = (DefaultTableModel) tableKhuyenMai.getModel();
        model.setRowCount(0);
        for (Promotion promotion : promotionList) {
            model.addRow(new Object[]{promotion.getPromotionID(), promotion.getPromotionName(), promotion.getStartDate(), promotion.getEndDate(), promotion.getDiscount(), promotion.getPromotionType().getPromotionTypeName()});
        }
    }


    // Variables declaration - do not modify
    private Button btnAdd;
    private Button btnEndDate;
    private Button btnStartDate;
    private ComboBoxSuggestion cboProType_Left;
    private Combobox cboLoaiKhuyenMai;
    private Combobox cboTinhTrang;
    private DateChooser endDate;
    private JLabel lbEndDate;
    private JLabel lbPromoName;
    private JLabel lbPromoType;
    private JLabel lbStartDate;
    private JLabel lbTitle;
    private JLabel lblPer;
    private PanelRound pCenter;
    private PanelRound pLeft;
    private PolygonCorner polygonCorner;
    private JScrollPane scrollPane;
    private DateChooser startDate;
    private TableCustom tableCustom;
    private JTable tableKhuyenMai;
    private TextField txtName;
    private TextField txtNgayBatDau;
    private TextField txtNgayKetThuc;
    private TextField txtPer;
    private PromotionType_DAO promotionType_dao = new PromotionType_DAO();
    private Promotion_DAO promotion_dao = new Promotion_DAO();
    // End of variables declaration
}
